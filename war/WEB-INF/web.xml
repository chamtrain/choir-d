<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2013 The Board of Trustees of The Leland Stanford Junior University.
  ~ All Rights Reserved.
  ~
  ~ See the NOTICE and LICENSE files distributed with this work for information
  ~ regarding copyright ownership and licensing. You may not use this file except
  ~ in compliance with a written license agreement with Stanford University.
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See your
  ~ License for the specific language governing permissions and limitations under
  ~ the License.
  -->

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
        version="2.5">

        <!-- Name of the application --> 
        <display-name>Stanford Pain Management Center Registry</display-name>

<!--
To add a site, add here or context.xml the XX.service.url & XX.service.password
  (context.xml is better- password must be shared with both registry and survey apps)
Add it to:  SurveySystemFactoryImpl
Add it to:  Database, survey_site table and parameters to app_config (see CreateRegistry.java for example)
-->

  <welcome-file-list>
    <welcome-file>Registry.nocache.html</welcome-file>
    <welcome-file>Registry.html</welcome-file>
    <welcome-file>Survey.nocache.html</welcome-file>
    <welcome-file>SurveyNoServer.nocache.html</welcome-file>
  </welcome-file-list>

  <context-param>
    <param-name>pedpain.service.url</param-name>
    <param-value>/registry/service1/survey2</param-value>
  </context-param>
  <context-param>
    <param-name>pedpain.service.password</param-name>
    <param-value>foo</param-value>
  </context-param>

  <context-param>
    <param-name>ir.service.url</param-name>
    <param-value>/registry/service1/survey2</param-value>
  </context-param>
  <context-param>
    <param-name>ir.service.password</param-name>
    <param-value>foo</param-value>
  </context-param>

  <context-param>
    <param-name>preanesthesia.service.url</param-name>
    <param-value>/service1/survey2</param-value>
  </context-param>
  <context-param>
    <param-name>preanesthesia.service.password</param-name>
    <param-value>foo</param-value>
  </context-param>
  <context-param>
    <param-name>registry.service.url</param-name>
    <param-value>/service1/survey2</param-value>
  </context-param>
  <context-param>
    <param-name>choir.service.url</param-name>
    <param-value>/service1/survey2</param-value>
  </context-param>
  <context-param>
    <param-name>ohsu.service.url</param-name>
    <param-value>/service1/survey2</param-value>
  </context-param>
  <context-param>
    <param-name>registry.service.password</param-name>
    <param-value>foo</param-value>
  </context-param>
  <context-param>
    <param-name>choir.service.password</param-name>
    <param-value>foo</param-value>
  </context-param>
  <context-param>
    <param-name>ohsu.service.password</param-name>
    <param-value>foo</param-value>
  </context-param>
  <context-param>
    <param-name>satisfaction.service.url</param-name>
    <param-value>/service1/survey2</param-value>
  </context-param>
  <context-param>
    <param-name>satisfaction.service.password</param-name>
    <param-value>foo</param-value>
  </context-param>
  <context-param>
    <param-name>stride.service.url</param-name>
    <param-value>/service2/survey2</param-value>
  </context-param>
  <context-param>
    <param-name>stride.service.password</param-name>
    <param-value>bar</param-value>
  </context-param>
  <context-param>
    <param-name>registry.sql.log.parameters</param-name>
    <param-value>true</param-value>
  </context-param>
  <context-param>
    <param-name>registry.sql.in.exception.messages</param-name>
    <param-value>true</param-value>
  </context-param>
  <!-- Uncomment this if you want to test batch processing
  <context-param>
    <param-name>batch.interval.seconds</param-name>
    <param-value>30</param-value>
  </context-param>
  -->
  <!--  Use context-param "consent_form" to force showing the consent form before going onto a survey -->
  <!--  the param-value is the file path relative to where the app is "..apache/webapps/registry/" --> 
  <!-- context-param>
    <param-name>consent_form</param-name>
  	<param-value>WEB-INF/consent_form.txt</param-value>
  </context-param> -->
  
  <!-- context-param><param-name>email.from</param-name><param-value>teresa.pacht@stanford.edu</param-value></context-param -->
  <!-- 
  <context-param><param-name>email.template.FollowUp</param-name>
  				 <param-value>WEB-INF/FollowUpEmail.txt</param-value></context-param>
  <context-param><param-name>email.template.Initial</param-name>
  				 <param-value>WEB-INF/InitialEmail.txt</param-value></context-param>
  <context-param><param-name>PatientIdFormat</param-name>
  				 <param-value>\d{5,7}-\d{1}</param-value></context-param>  
  <context-param><param-name>log4j.configuration</param-name>
  				 <param-value>log4j.xml</param-value></context-param>-->

  <filter>
    <filter-name>devFilter</filter-name>
    <filter-class>edu.stanford.registry.server.service.DevModeFilter</filter-class>
  </filter>
  <filter>
  	<filter-name>serviceFilter</filter-name> 
    <filter-class>edu.stanford.registry.server.service.ServiceFilter</filter-class>
  </filter>
  <filter>
    <filter-name>patientServiceFilter</filter-name>
    <filter-class>edu.stanford.registry.server.PatientServiceFilter</filter-class>
  </filter>
  <filter>
  	<filter-name>noCacheFilter</filter-name> 
  	<filter-class>edu.stanford.registry.server.service.NoCacheFilter</filter-class>
  </filter>
  <filter>
    <filter-name>surveyTokenFilter</filter-name>
    <filter-class>edu.stanford.registry.server.service.SurveyTokenFilter</filter-class>
  </filter>
  <filter>
    <filter-name>patsatServiceFilter</filter-name>
    <filter-class>edu.stanford.registry.server.service.ServiceFilter</filter-class>
    <init-param>
      <param-name>registry.jndi.datasource</param-name>
      <param-value>java:comp/env/jdbc/patsatDB</param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>proxyAuthFilter</filter-name>
    <filter-class>edu.stanford.registry.server.ServiceProxyAuthFilter</filter-class>
  </filter>
  <filter>
    <filter-name>patsatProxyAuthFilter</filter-name>
    <filter-class>edu.stanford.registry.server.ServiceProxyAuthFilter</filter-class>
    <init-param>
      <param-name>property.key.prefix</param-name>
      <param-value>satisfaction</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>surveyTokenFilter</filter-name>
    <url-pattern>/survey/*</url-pattern>
    <url-pattern>/service1/*</url-pattern>
    <url-pattern>/service2/*</url-pattern>
    <url-pattern>/patsat/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>proxyAuthFilter</filter-name>
    <url-pattern>/service1/*</url-pattern>
    <url-pattern>/service2/*</url-pattern>
    <url-pattern>/patsat/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>devFilter</filter-name>
    <url-pattern>/registry/svc/*</url-pattern>
    <url-pattern>/registry/registry/svc/*</url-pattern>
    <!--<url-pattern>/survey/svc/*</url-pattern>-->
    <url-pattern>/service1/*</url-pattern>
    <url-pattern>/service2/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>serviceFilter</filter-name>
    <url-pattern>/registry/svc/*</url-pattern>
    <url-pattern>/registry/registry/svc/*</url-pattern>
    <url-pattern>/chart/*</url-pattern>
    <url-pattern>/dataImport/*</url-pattern>
    <url-pattern>/service1/*</url-pattern>
    <url-pattern>/service2/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>patientServiceFilter</filter-name>
    <url-pattern>/survey/svc/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
  	<filter-name>noCacheFilter</filter-name> 
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>patsatProxyAuthFilter</filter-name>
    <url-pattern>/patsat/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>patsatServiceFilter</filter-name>
    <url-pattern>/patsat/*</url-pattern>
  </filter-mapping>

  <servlet>
     <servlet-name>admin</servlet-name>
    <servlet-class>edu.stanford.registry.server.AdminServiceImpl</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>survey2</servlet-name>
    <servlet-class>edu.stanford.registry.server.survey.SurveyServiceProxy</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>surveyImpl</servlet-name>
    <servlet-class>com.seguedevelopment.gwtrpccommlayer.server.GwtRpcCommLayerServlet</servlet-class>
    <init-param>
      <param-name>GwtRpcCommLayerServletImplClass</param-name>
      <param-value>edu.stanford.registry.server.survey.SurveyServiceLocal</param-value>
    </init-param>
    <load-on-startup>3</load-on-startup>
  </servlet>
  <!--<servlet>-->
    <!--<servlet-name>surveyImpl</servlet-name>-->
    <!--<servlet-class>edu.stanford.registry.server.survey.SurveyServiceLocal</servlet-class>-->
  <!--</servlet>-->
  <servlet>
    <servlet-name>hl7_listener</servlet-name>
    <servlet-class>edu.stanford.registry.server.hl7.Hl7HohServlet</servlet-class>
  </servlet>

  <!--<servlet>-->
    <!--<servlet-name>surveyImpl</servlet-name>-->
    <!--<servlet-class>edu.stanford.registry.server.survey.SurveyServiceLocal</servlet-class>-->
  <!--</servlet>-->
  <servlet>
    <servlet-name>clinicService</servlet-name>
    <servlet-class>edu.stanford.registry.server.ClinicServiceImpl</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>clientService</servlet-name>
    <servlet-class>edu.stanford.registry.server.ClientServiceImpl</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>editorService</servlet-name>
    <servlet-class>edu.stanford.registry.server.EditServiceImpl</servlet-class>
  </servlet>
  <servlet> 
    <servlet-name>registrationService</servlet-name>
    <servlet-class>edu.stanford.registry.server.RegistrationServiceImpl</servlet-class>
  </servlet>
  <servlet>   
    <servlet-name>securityService</servlet-name>
    <servlet-class>edu.stanford.registry.server.SecurityServiceImpl</servlet-class>
  </servlet>
  <servlet>   
    <servlet-name>physicianService</servlet-name>
    <servlet-class>edu.stanford.registry.server.PhysicianServiceImpl</servlet-class>
  </servlet>
 
  <servlet>
    <servlet-name>builderService</servlet-name>
    <servlet-class>edu.stanford.registry.server.BuilderServiceImpl</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>ChartServlet</servlet-name> 
    <servlet-class>edu.stanford.registry.server.ChartServlet</servlet-class> 
  </servlet>
  <servlet>
		<servlet-name>adapter</servlet-name>
		<!-- servlet-class>org.restlet.ext.gwt.GwtShellServletWrapper</servlet-class -->
		 <servlet-class>org.restlet.ext.servlet.ServerServlet</servlet-class> 
		<init-param>
		  <param-name>org.restlet.application</param-name>
		  <param-value>edu.stanford.registry.server.service.RestletServiceManager</param-value>
		</init-param>
		<!-- init-param><param-name>module</param-name>
		  <param-value>org.restlet.client.RestletExample</param-value></init-param -->
		<init-param><param-name>org.restlet.clients</param-name><param-value>HTTP HTTPS FILE</param-value></init-param>
  </servlet>
  <servlet>
    <servlet-name>apiServlet</servlet-name>
    <servlet-class>org.restlet.ext.servlet.ServerServlet</servlet-class>
    <init-param>
      <param-name>org.restlet.application</param-name>
      <param-value>edu.stanford.registry.server.service.ApiServiceManager</param-value>
    </init-param>
  </servlet>
  <servlet>
    <servlet-name>SurveyRedirect</servlet-name>
    <servlet-class>edu.stanford.registry.server.SurveyRedirectServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>assessmentConfigService</servlet-name>
    <servlet-class>edu.stanford.registry.server.AssessmentConfigServiceImpl</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>configurePatientAssessmentService</servlet-name>
    <servlet-class>edu.stanford.registry.server.ConfigurePatientAssessmentServiceImpl</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>SurveyRedirect</servlet-name>
    <url-pattern>/Login.html</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
		<servlet-name>adapter</servlet-name>
		<url-pattern>/registry/svc/api/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>apiServlet</servlet-name>
    <url-pattern>/registry/svc/apiV10/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>admin</servlet-name>
    <url-pattern>/registry/svc/admin</url-pattern>
  </servlet-mapping>
  <!-- servlet-mapping>
    <servlet-name>patient</servlet-name>
    <url-pattern>/registry/svc/patient</url-pattern>
  </servlet-mapping -->
   <!--<servlet-mapping>-->
    <!--<servlet-name>patient</servlet-name>-->
    <!--<url-pattern>/survey/svc/patient</url-pattern>-->
  <!--</servlet-mapping>-->
  <servlet-mapping>
    <servlet-name>survey2</servlet-name>
    <url-pattern>/survey/svc/survey2</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>surveyImpl</servlet-name>
    <url-pattern>/service1/survey2</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>surveyImpl</servlet-name>
    <url-pattern>/service2/survey2</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
  	<servlet-name>clinicService</servlet-name>
  	<url-pattern>/registry/svc/clinicService</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>clientService</servlet-name>
    <url-pattern>/registry/svc/clientService</url-pattern>
  </servlet-mapping>
    <servlet-mapping>
    <servlet-name>editorService</servlet-name>
    <url-pattern>/registry/svc/editorService</url-pattern>
  </servlet-mapping>
   <servlet-mapping>
    <servlet-name>registrationService</servlet-name>
    <url-pattern>/registry/svc/registrationService</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>securityService</servlet-name>
    <url-pattern>/registry/svc/securityService</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>physicianService</servlet-name>
    <url-pattern>/registry/svc/physicianService</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>builderService</servlet-name>
    <url-pattern>/registry/svc/builderService</url-pattern>
  </servlet-mapping>
 <servlet-mapping>
   <servlet-name>ChartServlet</servlet-name> 
 	<url-pattern>/registry/svc/chart</url-pattern> 
</servlet-mapping>
  <servlet-mapping>
    <servlet-name>ChartServlet</servlet-name>
    <url-pattern>/svc/chart</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>ChartServlet</servlet-name>
    <url-pattern>/registry/registry/svc/chart</url-pattern>
  </servlet-mapping>
 <servlet-mapping>
   <servlet-name>ChartServlet</servlet-name> 
 	<url-pattern>/chart</url-pattern> 
</servlet-mapping>
  <servlet-mapping>
    <servlet-name>assessmentConfigService</servlet-name>
    <url-pattern>/registry/svc/assessmentConfigService</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>hl7_listener</servlet-name>
    <url-pattern>/hl7list</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>configurePatientAssessmentService</servlet-name>
    <url-pattern>/registry/svc/configurePatientAssessmentService</url-pattern>
  </servlet-mapping>
<!-- The listeners have been removed. They're no longer needed.
     Log4J, ServerUtils (and ServerContext) are initialized when ServiceFilter is
     initialized, by calling into the separate ServerInit class.

     ServerInit initializes the logger, database, ServerContext and ServerUtils.

     The ServerContext starts the BackgroundThread which handles
     the batch Survey finisher (used to be TaskManager) plus updating
     the user/config/sites cache (which belong to ServerContext)
     and run the patient and appointment import tasks.
-->

  <mime-mapping>
    <extension>xlsx</extension>
    <mime-type>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</mime-type>
  </mime-mapping>
<!--
  <mime-mapping>
    <extension>svg</extension>
    <mime-type>image/svg+xml</mime-type>
  </mime-mapping>
-->
</web-app>
